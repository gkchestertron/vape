const ModuleBuilder = require('../../ModuleBuilder')
const mock          = require('mock-fs')
const fs            = require('fs')
const index         = 
`/* ModuleBuilder
  Index file autogenerated by ModuleBuilder
  Remove these lines or add custom file to override builder
*/

import CalendarCard from './CalendarCard.vue'
import Card from './Card.vue'
import Clutch from './Clutch.vue'
import Comment from './Comment.vue'
import ContactCard from './ContactCard.vue'
import JumboTron from './JumboTron.vue'
import ProgressBar from './ProgressBar.vue'
import Spinner from './Spinner.vue'
import TopNav from './TopNav.vue'
import index from './index.js'
import  from './subfolder'

export default {
  CalendarCard,
  Card,
  Clutch,
  Comment,
  ContactCard,
  JumboTron,
  ProgressBar,
  Spinner,
  TopNav,
  index,
  ,
}`

mock({
  components: {
    'Nav.vue'    : '<template><nav></nav></template>',
    'Footer.vue' : '<template><foot></foot></template>',
    'index.js'   : index
  }
})

test('Builder should overwrite previous autogenerated index file', done => {
  // mock the compiler with function that restores fs and calls done
  const compiler = {
    plugin: jest.fn((hook, callback) => {
      callback({}, () => { 
        fs.readFile('components/index.js', (err, data) => {
          if (err)
            return done()

          expect(data.toString()).not.toEqual(index)
          done()
        })
      })
    })
  }

  const builder = new ModuleBuilder({ folders: ['components']  })

  builder.apply(compiler)
})

test('Builder should skip existing index file when building imports', done => {
  fs.readFile('components/index.js', (err, data) => {
    expect(/index\.js/m.test(data.toString())).toBe(false)
    mock.restore()
    done()
  })
})
